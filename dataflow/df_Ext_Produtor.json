{
	"name": "df_Ext_Produtor",
	"properties": {
		"folder": {
			"name": "1 - Extraction"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_Ext_Bronze_VendasHotmart_Entrada",
						"type": "DatasetReference"
					},
					"name": "Vendas"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_Ext_Silver_Produtor_Destino",
						"type": "DatasetReference"
					},
					"name": "Produtor"
				}
			],
			"transformations": [
				{
					"name": "AgregaProdutor"
				},
				{
					"name": "SelecionaProdutor"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Produto as string,",
				"          Afiliado as string,",
				"          {Nome do Produtor} as string,",
				"          {Documento do Produtor} as string,",
				"          {Meio de Pagamento} as string,",
				"          {Preço do Produto} as string,",
				"          {Preço da Oferta} as string,",
				"          {Tipo de Pagamento} as string,",
				"          {Tipo pagamento oferta} as string,",
				"          Moeda as string,",
				"          {Número da Parcela} as string,",
				"          {Recorrência} as string,",
				"          {Data de Venda} as string,",
				"          {Data de Confirmação} as string,",
				"          Status as string,",
				"          DDD as string,",
				"          Cidade as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Vendas",
				"Vendas aggregate(groupBy({Nome do Produtor}),",
				"     Contagem = count({Nome do Produtor})) ~> AgregaProdutor",
				"AgregaProdutor select(mapColumn(",
				"          {Nome do Produtor}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelecionaProdutor",
				"SelecionaProdutor sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Afiliado as string",
				"     ),",
				"     partitionFileNames:['produtor.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> Produtor"
			]
		}
	}
}